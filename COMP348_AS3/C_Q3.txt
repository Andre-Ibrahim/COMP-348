
#include <stdio.h>
typedef struct {/*Declaring the book structure*/
    char * title;
    float price;
}Book;

Display(Book arr[], int size);/*Letting the program know this method is defined*/



float AverageBookPrice(Book arr[], int size);/*Letting the program know this method is defined*/

void Add(Book * arr, int * size); /*Letting the program know this method is defined*/

int main(){
    int x;
    printf("how many books do you want to add: ");
    scanf("%d", &x);
    
    Book arr[x];
    char * title;
    float price;
    
    for(int i = 0; i < x; i++){
        printf("what is the title of book %d: ", (i+1));
        scanf("%s", &title);
        printf("what is the price of book %d: ", (i+1));
        scanf("%f", &price);
        
        
        Book temp = {&title, price};/*Creates a book with the given information*/
        arr[i] = temp;/*Puts the books in an array*/
    }
    Display(arr, x);
    
    float avg = AverageBookPrice(arr, x);
    printf("The average price is %.2f$", avg);
    
    Add(arr,&x);
    
    Display(arr, x);
    
    
    return 0;
    
}


Display(Book * arr, int size){/*Display runs through array and prints the value inside each book*/
    for(int i = 0; i < size; i++){
        printf("Book %d ", (i + 1));
        printf("title: %s ", (arr + i)->title);
        printf("price: %.2f$\n", (arr + i)->price);
    }
}

float AverageBookPrice(Book arr[], int size){
    float average = 0;
    for(int i = 0; i < size; i++)/*Adds the price to an average and divides by number of entries at the end*/
        average += arr[i].price;
    return average/size;
}
void Add(Book * arr, int * size){
    
    char * title;
    float price;
    printf("\nwhat is the title of the book: "); // prompting user for a title
    scanf("%s", &title);
    printf("what is the price of the book: ");
    scanf("%f", &price);
    
    Book * newarr = (Book *) malloc((*size + 1) * sizeof(Book) ); // new array with size incermented by 1
    

    for(int i = 0; i < *size; i++){ // copying content of the array
        Book temp1 = *(arr + i);
        (newarr)[i] = temp1;
        
    }
        
        
    Book temp = {&title, price}; //value of the added Book in a temp vairable

    (arr)[*size] = temp;
    
    

    arr = newarr; // passing the address of the new array to the one that we wanted to modify
    
    *size = *size + 1; // incrementing the size of the array by reference
    
    free(newarr); // 
    
}


